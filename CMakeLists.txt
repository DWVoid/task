cmake_minimum_required(VERSION 3.10)
project(task)
set(CMAKE_CXX_STANDARD 17)

file(GLOB SRC Library/Details/*)
file(GLOB_RECURSE INC Library/Headers/*)
#System Check and Add Platform-Specific Source
if (WIN32)
    file(GLOB_RECURSE SRC_PLATFORM Library/Details/Win64NT6/*)
	set(TARGET_MACRO -DTASK_TARGET_WINDOWS)
elseif (UNIX)
    file(GLOB SRC_PLATFORM_SHARED Library/Details/Unix/*)
	set(TARGET_MACRO -DTASK_TARGET_POSIX)
    if (APPLE)    
        file(GLOB_RECURSE SRC_PLATFORM_UNIQUE Library/Details/Unix/Darwin/*)
		list(APPEND TARGET_MACRO -DTASK_TARGET_DARWIN)
    else()
        file(GLOB_RECURSE SRC_PLATFORM_UNIQUE Library/Details/Unix/Generic/*)
		list(APPEND TARGET_MACRO -DTASK_TARGET_UNIX_GENERIC)
	endif()
    set(Boost_USE_STATIC_LIBS ON)
    find_package(Boost REQUIRED COMPONENTS context)
	set(TARGET_LIBS Boost::context)
	set(SRC_PLATFORM ${SRC_PLATFORM_SHARED} ${SRC_PLATFORM_UNIQUE})
endif ()

add_library(task SHARED ${INC} ${SRC} ${SRC_PLATFORM})
target_include_directories(task PUBLIC Library/Headers)
target_compile_definitions(task PUBLIC ${TARGET_MACRO} -DTASK_EXPORTS)
target_link_libraries(task PRIVATE ${TARGET_LIBS})

# Enable IPO
include(CheckIPOSupported)
check_ipo_supported(RESULT HAS_IPO OUTPUT MESSAGE)
if(HAS_IPO)
    set_property(TARGET task PROPERTY INTERPROCEDURAL_OPTIMIZATION $<$<CONFIG:Debug>:FALSE>:TRUE)
else()
    message(WARNING "IPO is not supported: ${MESSAGE}")
endif()

add_executable(task_exp exp.cpp)
target_link_libraries(task_exp PRIVATE task)
